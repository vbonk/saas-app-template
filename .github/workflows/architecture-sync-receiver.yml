name: üîÑ Architecture Sync Receiver

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      architecture_commit:
        description: 'Architecture repository commit SHA'
        required: true
        type: string
      change_summary:
        description: 'Summary of architecture changes'
        required: true
        type: string

jobs:
  validate-sync:
    name: Validate Architecture Synchronization
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'architecture-sync') || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      actions: read
      pull-requests: read
    
    steps:
    - name: Checkout Template Repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref || github.ref }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Validate Template Structure
      run: |
        echo "üîç Validating template structure..."
        
        required_files=(
          "package.json"
          ".env.example"
          "README.md"
          "docs/ARCHITECTURE.md"
          "docs/DEPLOYMENT.md"
          "docs/API.md"
        )
        
        for file in "${required_files[@]}"; do
          if [[ ! -f "$file" ]]; then
            echo "‚ùå Required file missing: $file"
            exit 1
          fi
        done
        
        echo "‚úÖ All required template files present"
        
    - name: Check Architecture Compliance
      run: |
        echo "üèóÔ∏è Checking architecture compliance..."
        
        # Check for required dependencies based on architecture
        if ! grep -q '"@clerk/nextjs"' package.json; then
          echo "‚ùå Missing Clerk authentication dependency"
          exit 1
        fi
        
        if ! grep -q '"@prisma/client"' package.json; then
          echo "‚ùå Missing Prisma ORM dependency"
          exit 1
        fi
        
        if ! grep -q '"next"' package.json; then
          echo "‚ùå Missing Next.js dependency"
          exit 1
        fi
        
        echo "‚úÖ Architecture compliance validated"
        
    - name: Validate Environment Template
      run: |
        echo "‚öôÔ∏è Validating environment template..."
        
        required_env_vars=(
          "CLERK_SECRET_KEY"
          "DATABASE_URL"
          "NEXT_PUBLIC_APP_URL"
          "STRIPE_SECRET_KEY"
          "RESEND_API_KEY"
        )
        
        for var in "${required_env_vars[@]}"; do
          if ! grep -q "$var" .env.example; then
            echo "‚ùå Missing environment variable in .env.example: $var"
            exit 1
          fi
        done
        
        echo "‚úÖ Environment template validated"
        
    - name: Run Type Check
      run: npm run type-check
      
    - name: Run Linting
      run: npm run lint
      
    - name: Run Tests
      run: npm run test
      
    - name: Test Build
      run: npm run build
      
    - name: Validate Documentation
      run: npm run docs:validate
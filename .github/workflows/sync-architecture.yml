name: Sync to Architecture Repository

on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/**'
      - 'scripts/**'
      - 'SECURITY.md'
      - 'jest.config.js'
      - 'playwright.config.ts'

jobs:
  sync-to-architecture:
    name: Sync Template Changes to Architecture
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    
    steps:
      - name: Checkout Template Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Detect Changes
        id: changes
        run: |
          changed_files=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files:"
          echo "$changed_files"
          
          security_changes=false
          ci_changes=false
          scripts_changes=false
          
          if echo "$changed_files" | grep -E "(SECURITY\.md|scripts/security-validation\.sh)"; then
            security_changes=true
          fi
          
          if echo "$changed_files" | grep -E "\.github/workflows/"; then
            ci_changes=true
          fi
          
          if echo "$changed_files" | grep -E "scripts/"; then
            scripts_changes=true
          fi
          
          echo "security_changes=$security_changes" >> $GITHUB_OUTPUT
          echo "ci_changes=$ci_changes" >> $GITHUB_OUTPUT
          echo "scripts_changes=$scripts_changes" >> $GITHUB_OUTPUT
          
          if [ "$security_changes" = "true" ] || [ "$ci_changes" = "true" ] || [ "$scripts_changes" = "true" ]; then
            echo "sync_needed=true" >> $GITHUB_OUTPUT
          else
            echo "sync_needed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Checkout Architecture Repository
        if: steps.changes.outputs.sync_needed == 'true'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/saas-ecosystem-architecture
          token: ${{ secrets.ARCHITECTURE_SYNC_TOKEN }}
          path: architecture-repo
      
      - name: Sync Files to Architecture Repository
        if: steps.changes.outputs.sync_needed == 'true'
        run: |
          echo "üîÑ Syncing files to architecture repository..."
          
          # Configure git
          cd architecture-repo
          git config user.name "Template Sync Bot"
          git config user.email "template-sync@users.noreply.github.com"
          
          # Create sync branch
          sync_branch="template-sync-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$sync_branch"
          
          cd ..
          
          # Sync security improvements
          if [ "${{ steps.changes.outputs.security_changes }}" = "true" ]; then
            echo "üîê Syncing security improvements..."
            if [ -f "scripts/security-validation.sh" ]; then
              cp scripts/security-validation.sh architecture-repo/scripts/
              echo "‚úÖ Security validation script synced"
            fi
            if [ -f "SECURITY.md" ]; then
              # Merge security content rather than overwrite
              if [ -f "architecture-repo/SECURITY.md" ]; then
                echo "# Security Documentation Updates from Template" >> architecture-repo/SECURITY.md
                echo "" >> architecture-repo/SECURITY.md
                tail -n +1 SECURITY.md >> architecture-repo/SECURITY.md
              else
                cp SECURITY.md architecture-repo/
              fi
              echo "‚úÖ Security documentation synced"
            fi
          fi
          
          # Sync CI/workflow improvements
          if [ "${{ steps.changes.outputs.ci_changes }}" = "true" ]; then
            echo "üöÄ Syncing CI improvements..."
            mkdir -p architecture-repo/standards/workflows/templates/
            if [ -f ".github/workflows/ci.yml" ]; then
              cp .github/workflows/ci.yml architecture-repo/standards/workflows/templates/ci-template.yml
              echo "‚úÖ CI workflow template synced"
            fi
          fi
          
          # Sync script improvements
          if [ "${{ steps.changes.outputs.scripts_changes }}" = "true" ]; then
            echo "üõ†Ô∏è Syncing script improvements..."
            for script in scripts/*.sh; do
              if [ -f "$script" ] && [ "$(basename "$script")" != "dev-setup.sh" ]; then
                cp "$script" "architecture-repo/scripts/"
                echo "‚úÖ Synced $(basename "$script")"
              fi
            done
          fi
          
          # Commit and push changes
          cd architecture-repo
          git add .
          
          if git diff --staged --quiet; then
            echo "‚ÑπÔ∏è No changes to sync"
            exit 0
          fi
          
          commit_message="üîÑ Sync improvements from template repository

          Template commit: ${{ github.sha }}
          Changes: Security=${{ steps.changes.outputs.security_changes }}, CI=${{ steps.changes.outputs.ci_changes }}, Scripts=${{ steps.changes.outputs.scripts_changes }}
          
          Auto-synced by template‚Üíarchitecture workflow"
          
          git commit -m "$commit_message"
          git push origin "$sync_branch"
          
          echo "‚úÖ Changes synced to branch: $sync_branch"
          echo "sync_branch=$sync_branch" >> $GITHUB_OUTPUT
          
      - name: Create Pull Request
        if: steps.changes.outputs.sync_needed == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ARCHITECTURE_SYNC_TOKEN }}
          script: |
            const syncBranch = process.env.SYNC_BRANCH || `template-sync-${Date.now()}`;
            
            try {
              const { data: pr } = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: 'saas-ecosystem-architecture',
                title: 'üîÑ Sync improvements from template repository',
                head: syncBranch,
                base: 'main',
                body: `## Template‚ÜíArchitecture Sync
                
                **Source commit**: \`${{ github.sha }}\`
                **Triggered by**: ${{ github.event.head_commit.message }}
                
                ### Changes Synced
                - Security changes: ${{ steps.changes.outputs.security_changes }}
                - CI changes: ${{ steps.changes.outputs.ci_changes }}
                - Scripts changes: ${{ steps.changes.outputs.scripts_changes }}
                
                ### Review Checklist
                - [ ] Security patterns are appropriate for architecture repo
                - [ ] CI templates work with architecture structure
                - [ ] Scripts are compatible with architecture workflows
                - [ ] Documentation standards are maintained
                
                **Auto-generated by template sync workflow**`
              });
              
              console.log(\`‚úÖ Pull request created: \${pr.html_url}\`);
            } catch (error) {
              console.log('‚ö†Ô∏è Could not create PR:', error.message);
              console.log('Branch created but manual PR creation required');
            }
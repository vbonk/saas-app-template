name: Sync to Architecture Repository

on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/**'
      - 'scripts/**'
      - 'SECURITY.md'
      - 'jest.config.js'
      - 'playwright.config.ts'

jobs:
  sync-to-architecture:
    name: Sync Template Changes to Architecture
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    
    steps:
      - name: Checkout Template Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Detect Changes
        id: changes
        run: |
          changed_files=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files:"
          echo "$changed_files"
          
          security_changes=false
          ci_changes=false
          scripts_changes=false
          
          if echo "$changed_files" | grep -E "(SECURITY\.md|scripts/security-validation\.sh)"; then
            security_changes=true
          fi
          
          if echo "$changed_files" | grep -E "\.github/workflows/"; then
            ci_changes=true
          fi
          
          if echo "$changed_files" | grep -E "scripts/"; then
            scripts_changes=true
          fi
          
          echo "security_changes=$security_changes" >> $GITHUB_OUTPUT
          echo "ci_changes=$ci_changes" >> $GITHUB_OUTPUT
          echo "scripts_changes=$scripts_changes" >> $GITHUB_OUTPUT
          
          if [ "$security_changes" = "true" ] || [ "$ci_changes" = "true" ] || [ "$scripts_changes" = "true" ]; then
            echo "sync_needed=true" >> $GITHUB_OUTPUT
          else
            echo "sync_needed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Issue for Architecture Sync
        if: steps.changes.outputs.sync_needed == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const architectureRepo = 'saas-ecosystem-architecture';
            
            const issueBody = `## üîÑ Template Repository Sync Required
            
            **Source Commit**: \`${{ github.sha }}\`
            **Triggered by**: ${{ github.event.head_commit.message }}
            
            ### Changes Detected
            - Security changes: ${{ steps.changes.outputs.security_changes }}
            - CI changes: ${{ steps.changes.outputs.ci_changes }}
            - Scripts changes: ${{ steps.changes.outputs.scripts_changes }}
            
            ### Files to Sync
            ${process.env.CHANGED_FILES || 'See commit for details'}
            
            ### Required Actions
            1. Review template changes in [commit ${{ github.sha }}](https://github.com/${owner}/saas-app-template/commit/${{ github.sha }})
            2. Apply relevant improvements to architecture repository
            3. Update standards and documentation as needed
            4. Close this issue when sync is complete
            
            **Auto-generated by template‚Üíarchitecture sync workflow**`;
            
            try {
              await github.rest.issues.create({
                owner: owner,
                repo: architectureRepo,
                title: `[SYNC] Template improvements need architecture update`,
                body: issueBody,
                labels: ['sync-required', 'template-changes']
              });
              console.log('‚úÖ Sync issue created in architecture repository');
            } catch (error) {
              console.log('‚ö†Ô∏è Could not create issue in architecture repo:', error.message);
              console.log('Manual sync required for this change');
            }